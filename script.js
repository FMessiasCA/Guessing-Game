/* Pegando os elementos, atrav√©s do querySelector, que irei utilizar e os transformando em vare√°veis constantes. */
const guessNumberInput = document.querySelector('#guessNumber');
const guessButton = document.querySelector('#guessButton');
const span = document.querySelector('span');
const resetGame = document.querySelector('#resetGame')

/* Gerando um n√∫mero aleat√≥rio, inteiro e que vai at√© 10. */
const randomNumber = Math.round(Math.random() * 10);

/* Criando uma vari√°vel que armazena a quantidade de tentativas */
let attempts = 0;

/* Toda vez que o bot√£o sofrer um evento de clique, ele ir√° disparar uma fun√ß√£o. */
guessButton.addEventListener('click', (event) => {
    /* Para evitar que a p√°gina fique recarregando a cada evento. */
    event.preventDefault();

    /* Para evitar que ditem n√∫meros abaixo ou acima do proposto */
    if (guessNumberInput.value < 0 || guessNumberInput.value > 10) {
        guessNumberInput.value = ""
        guessNumberInput.focus();
        return alert(`N√∫mero inv√°lido! Apenas n√∫meros entre 0 e 10.`)
    }

    /* Para evitar que n√£o ditem n√∫meros.*/
    if (guessNumberInput.value == '') {
        guessNumberInput.value = ""
        guessNumberInput.focus();
        return alert(`Digite um n√∫mero qualquer que esteja entre 0 e 10.`)
    }

    /* A cada clique no bot√£o, o n√∫mero de tentativas vai somando +1 em seu valor. */
    attempts++;

    /* Criei uma vari√°vel para armazenar o valor inserido no input. */
    let guessNumber = guessNumberInput.value;

    /* Condicional criada para definir se o valor √© 'igual a' e a√ß√µes de resultado.*/
    if (guessNumber == randomNumber) {
        span.innerText = (attempts == 1) ? `De primeira n√£o tem gra√ßa! ü§£` : `Voc√™ acertou... depois de ${attempts} tentativas at√© minha vovozinha.`

        guessButton.style.display = 'none';
        resetGame.style.display = 'block';
    } else {
        span.innerText = `Voc√™ errou, continue a tentar. üòÖ`
        guessNumberInput.value = '';
    }


});

/* Um bot√£o de reset que fica dispon√≠vel a cada vit√≥ria. */
resetGame.addEventListener('click', (e) => {
    attempts = 0;
    guessNumberInput.value = '';

    span.innerHTML = '';

    guessButton.style.display = 'inline-block';
    resetGame.style.display = 'none';

    guessNumberInput.focus();
});
